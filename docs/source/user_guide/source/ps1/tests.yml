setup: "from hashlib import sha1"
hash: 'sha1({{snippet}}.encode("utf-8")+b"{{salt}}").hexdigest()'
dispatch: "type({{snippet}})"
normalize: "str({{snippet}})"
check: "assert {{snippet}} == '{{value}}', '{{message}}'"
success: "print('Success!')"

templates:
    default: 
        - test: "{{snippet}}"
          fail: "Value not correct."

    int:
        - test: "type({{snippet}})"
          fail: "return type is not int"

        - test: "{{snippet}}"
          fail: "Value not correct."

    float:
        - test: "type({{snippet}})"
          fail: "return type is not float"

        - test: "round({{snippet}}, 3)"
          fail: "Value neither correct nor close."

    set:
        - test: "type({{snippet}})"
          fail: "return type is not set"

        - test: "len({{snippet}})"
          fail: "Length does not match."

        - test: "{{snippet}}"
          fail: "Value not correct."

    list:
        - test: "type({{snippet}})"
          fail: "return type is not list"

        - test: "len({{snippet}})"
          fail: "Length does not match."

        - test: "sorted({{snippet}})"
          fail: "values do not match."

        - test: "{{snippet}}"
          fail: "Order of elements do not match."	# may not matter can be ignored

    str:

        - test: "type({{snippet}})"
          fail: "return type is not str"

        - test: "len({{snippet}})"
          fail: "length not correct"

        - test: "{{snippet}}"
          fail: "incorrect value"

    dict:

        - test: "type({{snippet}})"
          fail: "return type is not dict"

    - test: "len(list({{snippet}}.keys()))"
      fail: "number of keys are not matching"

    - test: "sorted(list({{snippet}}.keys()))"
      fail: "keys are not matching"

    - test: "sorted(list({{snippet}}.values()))"
      fail: "values are not matching"

    - test: "{{snippet}}"
      fail: "results are not matching"

